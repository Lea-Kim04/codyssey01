Analysis - Design - Code - Test

> 문제 상황
실제 중요한 건 시스템의 주요 지표를 살펴보는 것이었다.
이제는 미션 컴퓨터의 시스템 지표들을 지속적으로 확인하면서 / 모니터링 하는 코드를 작성해서 
컴퓨터가 이유도 없이 다운되는 이유를 찾아 보아야 한다.

> 수행과제
값들을 연속적으로 출력하기 위해서 MissionComputer 클래스에 있는 get_mission_computer_info(), get_mission_computer_load() 두 개의 메소드를 time 라이브러리를 사용해서 각각 20초에 한번씩 결과를 출력 할 수 있게 수정한다.
MissionComputer 클래스를 runComputer 라는 이름으로 인스턴스화 한다.
runComputer 인스턴스의 get_mission_computer_info(), get_mission_computer_load(), get_sensor_data() 메소드를 각각 멀티 쓰레드로 실행 시킨다.
다시 코드를 수정해서 MissionComputer 클래스를 runComputer1, runComputer2, runComputer3 이렇게 3개의 인스턴스를 만든다.
3개의 인스턴스를 멀티 프로세스로 실행시켜서 각각 get_mission_computer_info(), get_mission_computer_load(), get_sensor_data()를 실행시키고 출력을 확인한다.
최종적으로 결과를 mars_mission_computer.py 에 저장한다.

> 개발환경	
Python 버전은 3.x 버전으로 한다. 
Python에서 기본 제공되는 명령어만 사용해야 하며 별도의 라이브러리나 패키지를 사용해서는 안된다. 
Python의 coding style guide를 확인하고 가이드를 준수해서 코딩한다. 
(PEP 8 – 파이썬 코드 스타일 가이드 | peps.python.org)
문자열을 표현 할 때에는 ‘ ’을 기본으로 사용한다. 다만 문자열 내에서 ‘을 사용할 경우와 같이 부득이한 경우에는 “ “를 사용한다. 
foo = (0,) 와 같이 대입문의  = 앞 뒤로는 공백을 준다. 
들여 쓰기는 공백을 기본으로 사용합니다. 

> 제약사항
python에서 기본 제공되는 명령어 이외의 별도의 라이브러리나 패키지를 사용해서는 안된다.
단 쓰레드와 멀티 프로세스를 다루는 부분은 외부 라이브러리 사용 가능하다.
경고 메시지 없이 모든 코드는 실행 되어야 한다.
------
보너스 과제
멀티 쓰레드와 멀티 프로세스에서 반복적으로 출력되는 중간에 특정한 키를 입력 받아 출력을 멈출 수 있게 코드를 작성한다.

------
[작업 순서도]

import time
#쓰레드와 멀티 프로세스를 다루는 외부 라이브러리?

try:

    class MissionComputer
    
        def __init__(self):
        
        def get_mission_computer_info(self):
        20초에 한번씩 결과를 출력 할 수 있게 수정
        
        def get_mission_computer_load(self):
        20초에 한번씩 결과를 출력 할 수 있게 수정

    runComputer = MissionComputer()

    #멀티쓰레드로 실행
    runComputer.get_mission_computer_info()
    runComputer.get_mission_computer_load
    runComputer.get_sensor_data()

    #코드 수정
    runComputer1 = MissionComputer()
    runComputer2 = MissionComputer()
    runComputer3 = MissionComputer()

    runComputer1, runComputer2, runComputer3 #멀티프로세스로 실행
    get_mission_computer_info(), get_mission_computer_load(), get_sensor_data() #실행
    #출력확인

except FileNotFoundError: 
    print('파일이 존재하지 않음.')
except Exception as e:
    print('파일 처리 중 오류가 발생.', e)

#save as 'mars_mission_computer.py'

> 보너스 과제
멀티 쓰레드와 멀티 프로세스에서 
반복적으로 출력되는 중간에 
특정한 키를 입력 받아 
출력을 멈출 수 있게 코드를 작성한다.
def check_stop(value: str):
    if value == 'q':
        print('System stopped…')
        return True #stop
    return False

    while True:
        env_values = RunComputer.get_sensor_data()
        print(json.dumps(env_values, indent=None)) #2
        time.sleep(5)

        user_input = input('Enter input (type "q" to quit): ')
        if check_stop(user_input):  # True - stop
            break
        print('Continuing to load data...')
